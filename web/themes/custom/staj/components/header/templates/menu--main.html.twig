{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link URL, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}

{{ attach_library('staj/header') }}

<button class="d-lg-none navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
  <span class="navbar-toggler-icon"></span>
</button>

    <div class="collapse navbar-collapse justify-content-end">


{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see https://twig.symfony.com/doc/3.x/tags/macro.html
#}

{{ menus.menu_links(items, attributes, 0) }}

{% macro menu_links(items, attributes, menu_level) %}
  {% import _self as menus %}
  {% if items %}
    {% if menu_level == 0 %}
      <ul{{ attributes.addClass('navbar-nav mb-2 mb-lg-0') }}>
    {% else %}
      <ul{{ attributes.addClass('dropdown-menu') }}>
    {% endif %}
    {% for item in items %}
          {% if menu_level == 0 %}
            <li class="nav-item{{ item.below ? ' dropdown'}}">
            {{ link(item.title, item.url, { 'class':[ 'nav-link', item.below ? 'dropdown-toggle' ], 'data-bs-toggle': ['dropdown'], 'role': ['button'], 'aria-expanded': ['false'] }) }}
          {% else %}
            <li>
              {{ link(item.title, item.url, { 'class':[ 'dropdown-item' ]}) }}
            </li>
          {% endif %}
            {% if item.below %}
              {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
            {% endif %}
          {% if menu_level == 0 %}
            </li>
          {% endif %}
      {% endfor %}

    </ul>
  {% endif %}
{% endmacro %}
</div>

