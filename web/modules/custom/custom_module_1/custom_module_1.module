<?php
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Access\AccessResult;

/**
 * Implements hook_theme().
 */
function custom_module_1_theme($existing, $type, $theme, $path) {
  return [
    'my_template' => [
      'variables' => ['ad' => NULL, 'soyad' => NULL],
    ],
  ];
}

 function custom_module_1_entity_access(EntityInterface $entity, $operation, \Drupal\Core\Session\AccountInterface $account) {
   $entityid = $entity->getEntityType()->id();
   if ($entityid == "node" && $entity->bundle() == "page") {
    $visible = $entity->field_anonymous_is_visible->value;
    if ($entity->getOwner()->status->value == false ){
      return AccessResult::forbidden();
    }
    // if ($visible != 1 && \Drupal::currentUser()->isAnonymous()==true) {
    //   return AccessResult::forbidden();
    // }
    
    return AccessResult::neutral();
   }

 }

 function custom_module_1_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  //Butun add content sayfalari
  if ($form_id == "node_page_form") {
    $current_user = \Drupal::currentUser();
    //Permission'a göre erisim.
    if ($current_user->hasPermission('add content page erisimi') == FALSE) {
      $form['field_anonymous_is_visible']['#access'] = FALSE;
    }
    //Role'e göre erisim. Content Editor rolu erismesin.
    // $roles = $current_user->getRoles();
    // if (in_array("content_editor", $roles)) {
    // $form['field_anonymous_is_visible']['#access'] = FALSE;
    // }
  }
}
function custom_module_1_cron() {

  // Logs an error
  \Drupal::logger('my_module')->error("Calıştı");

}